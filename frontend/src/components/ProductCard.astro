---
import { Button } from '@/components/ui/button';
import '../components/LivePriceUpdater'; // Ensure the custom element is registered

interface Props {
  id: string;
  name: string;
  description: string;
  price: number;
  stock: number;
  mg: number;
  imageUrl?: string; // Optional image URL
}

const { id, name, description, price, stock, mg, imageUrl } = Astro.props;

const isOutOfStock = stock <= 0;
const stockText = isOutOfStock ? 'Out of Stock' : `In Stock (${stock})`;
const stockClass = stock > 10 ? 'text-green-500' : stock > 0 ? 'text-yellow-500' : 'text-[#FF4D4F]';
---

<div class="bg-background border border-border rounded-lg p-6">
  <div class="flex flex-col md:flex-row gap-6">
    <div class="w-full md:w-1/3 bg-muted rounded-md aspect-square flex items-center justify-center text-foreground/50">
      {imageUrl ? <img src={imageUrl} alt={name} class="object-cover w-full h-full rounded-md" /> : 'Product Image'}
    </div>
    <div class="w-full md:w-2/3">
      <h3 class="text-xl font-bold mb-2">{name}</h3>
      <p class="text-muted-foreground mb-4">{description}</p>
      <div class="flex flex-col gap-2 mb-6">
        <div class="flex items-center gap-2">
          <span class="font-medium">As low as:</span>
          <span id={`price-${id}`} class="text-lg font-bold">${price.toFixed(2)}</span>
        </div>
        <div class="flex items-center gap-2">
          <span class="font-medium">Stock:</span>
          <span id={`stock-${id}`} class={stockClass}>{stockText}</span>
        </div>
        <div class="flex items-center gap-2">
          <span class="font-medium">Size:</span>
          <span id={`mg-${id}`}>{mg}mg</span>
        </div>
      </div>
      <Button client:visible variant={isOutOfStock ? 'secondary' : 'default'} disabled={isOutOfStock}>
        Add to Cart
      </Button>
    </div>
  </div>
  {/* The live price updater component */}
  <live-price-updater data-product-id={id}></live-price-updater>
</div>